<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-12-06T18:36:30 NZDT" name="Suite" finished-at="2020-12-06T18:38:02 NZDT" duration-ms="92438">
    <groups>
      <group name="UserStory2">
        <method signature="ValidateRetirementPlanForEmployed.TestEmployed(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestUserStory2.ValidateRetirementPlanForEmployed@593aaf41]" name="TestEmployed" class="TestUserStory2.ValidateRetirementPlanForEmployed"/>
      </group> <!-- UserStory2 -->
    </groups>
    <test started-at="2020-12-06T18:36:30 NZDT" name="Validate Current Age Info Message" finished-at="2020-12-06T18:36:50 NZDT" duration-ms="20356">
      <class name="TestUserStory1.ValidateCurrentAgeInfoMessage">
        <test-method is-config="true" signature="Initiaze()[pri:0, instance:TestUserStory1.ValidateCurrentAgeInfoMessage@383bfa16]" started-at="2020-12-06T18:36:30 NZDT" name="Initiaze" finished-at="2020-12-06T18:36:41 NZDT" duration-ms="11448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Initiaze -->
        <test-method signature="checkInfoButton()[pri:0, instance:TestUserStory1.ValidateCurrentAgeInfoMessage@383bfa16]" started-at="2020-12-06T18:36:41 NZDT" name="checkInfoButton" finished-at="2020-12-06T18:36:49 NZDT" duration-ms="7944" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This calculator has an age limit of 64 years old as you need to be under the age of 65 to join KiwiSaver.] but found [This calculator has an age limit of 18 to 64 years old.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This calculator has an age limit of 64 years old as you need to be under the age of 65 to join KiwiSaver.] but found [This calculator has an age limit of 18 to 64 years old.]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at TestUserStory1.ValidateCurrentAgeInfoMessage.checkInfoButton(ValidateCurrentAgeInfoMessage.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInfoButton -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:TestUserStory1.ValidateCurrentAgeInfoMessage@383bfa16]" started-at="2020-12-06T18:36:50 NZDT" name="closeBrowser" finished-at="2020-12-06T18:36:50 NZDT" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- TestUserStory1.ValidateCurrentAgeInfoMessage -->
    </test> <!-- Validate Current Age Info Message -->
    <test started-at="2020-12-06T18:36:51 NZDT" name="Validate Info Icon present in all Fields" finished-at="2020-12-06T18:37:08 NZDT" duration-ms="17211">
      <class name="TestUserStory1.ValidateInfoIconPresentForFields">
        <test-method is-config="true" signature="Initiaze()[pri:0, instance:TestUserStory1.ValidateInfoIconPresentForFields@4fb3ee4e]" started-at="2020-12-06T18:36:51 NZDT" name="Initiaze" finished-at="2020-12-06T18:37:02 NZDT" duration-ms="10641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Initiaze -->
        <test-method signature="checkInfoIcon()[pri:1, instance:TestUserStory1.ValidateInfoIconPresentForFields@4fb3ee4e]" started-at="2020-12-06T18:37:02 NZDT" name="checkInfoIcon" finished-at="2020-12-06T18:37:08 NZDT" duration-ms="5930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInfoIcon -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:TestUserStory1.ValidateInfoIconPresentForFields@4fb3ee4e]" started-at="2020-12-06T18:37:08 NZDT" name="closeBrowser" finished-at="2020-12-06T18:37:08 NZDT" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- TestUserStory1.ValidateInfoIconPresentForFields -->
    </test> <!-- Validate Info Icon present in all Fields -->
    <test started-at="2020-12-06T18:37:09 NZDT" name="Validate Retirement Plan for Employed Status" finished-at="2020-12-06T18:37:26 NZDT" duration-ms="17412">
      <class name="TestUserStory2.ValidateRetirementPlanForEmployed">
        <test-method is-config="true" signature="Initiaze()[pri:0, instance:TestUserStory2.ValidateRetirementPlanForEmployed@593aaf41]" started-at="2020-12-06T18:37:09 NZDT" name="Initiaze" finished-at="2020-12-06T18:37:19 NZDT" duration-ms="10466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Initiaze -->
        <test-method signature="TestEmployed(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestUserStory2.ValidateRetirementPlanForEmployed@593aaf41]" started-at="2020-12-06T18:37:19 NZDT" name="TestEmployed" data-provider="getDataEmployed" finished-at="2020-12-06T18:37:25 NZDT" duration-ms="6295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Employed]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[82000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestEmployed -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:TestUserStory2.ValidateRetirementPlanForEmployed@593aaf41]" started-at="2020-12-06T18:37:26 NZDT" name="closeBrowser" finished-at="2020-12-06T18:37:26 NZDT" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- TestUserStory2.ValidateRetirementPlanForEmployed -->
    </test> <!-- Validate Retirement Plan for Employed Status -->
    <test started-at="2020-12-06T18:37:26 NZDT" name="Validate Retirement Plan for Not employed Status" finished-at="2020-12-06T18:37:44 NZDT" duration-ms="18097">
      <class name="TestUserStory2.ValidateRetirementPlanForNotEmployed">
        <test-method is-config="true" signature="Initiaze()[pri:0, instance:TestUserStory2.ValidateRetirementPlanForNotEmployed@3ee37e5a]" started-at="2020-12-06T18:37:26 NZDT" name="Initiaze" finished-at="2020-12-06T18:37:36 NZDT" duration-ms="10237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Initiaze -->
        <test-method signature="TestNotEmployed(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestUserStory2.ValidateRetirementPlanForNotEmployed@3ee37e5a]" started-at="2020-12-06T18:37:36 NZDT" name="TestNotEmployed" data-provider="getDataNotEmployed" finished-at="2020-12-06T18:37:43 NZDT" duration-ms="7208" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Not employed]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[140000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Annually]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNotEmployed -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:TestUserStory2.ValidateRetirementPlanForNotEmployed@3ee37e5a]" started-at="2020-12-06T18:37:44 NZDT" name="closeBrowser" finished-at="2020-12-06T18:37:44 NZDT" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- TestUserStory2.ValidateRetirementPlanForNotEmployed -->
    </test> <!-- Validate Retirement Plan for Not employed Status -->
    <test started-at="2020-12-06T18:37:44 NZDT" name="Validate Retirement Plan for Self Employed Status" finished-at="2020-12-06T18:38:02 NZDT" duration-ms="18232">
      <class name="TestUserStory2.ValidateRetirementPlanForSelfEmployed">
        <test-method is-config="true" signature="Initiaze()[pri:0, instance:TestUserStory2.ValidateRetirementPlanForSelfEmployed@53ce1329]" started-at="2020-12-06T18:37:44 NZDT" name="Initiaze" finished-at="2020-12-06T18:37:55 NZDT" duration-ms="10524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Initiaze -->
        <test-method signature="TestSelfEmployed(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestUserStory2.ValidateRetirementPlanForSelfEmployed@53ce1329]" started-at="2020-12-06T18:37:55 NZDT" name="TestSelfEmployed" data-provider="getDataSelfEmployed" finished-at="2020-12-06T18:38:02 NZDT" duration-ms="7036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[46]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Self-employed]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[100000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[90]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Fortnightly]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[290000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestSelfEmployed -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:TestUserStory2.ValidateRetirementPlanForSelfEmployed@53ce1329]" started-at="2020-12-06T18:38:02 NZDT" name="closeBrowser" finished-at="2020-12-06T18:38:02 NZDT" duration-ms="137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- TestUserStory2.ValidateRetirementPlanForSelfEmployed -->
    </test> <!-- Validate Retirement Plan for Self Employed Status -->
  </suite> <!-- Suite -->
</testng-results>
